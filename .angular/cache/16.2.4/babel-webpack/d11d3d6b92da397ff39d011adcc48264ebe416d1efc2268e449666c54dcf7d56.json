{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction ValidatorsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \"SKU is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ValidatorsComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \"Surname is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ValidatorsComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \"Surname must begin with \");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \"123\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ValidatorsComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \"Form is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nlet ValidatorsComponent = /*#__PURE__*/(() => {\n  class ValidatorsComponent {\n    constructor(fb) {\n      this.myForm = fb.group({\n        \"sku\": [\"\", Validators.required],\n        \"surname\": [\"\", Validators.compose([Validators.required, this.validateSurname])]\n      });\n    }\n    onSubmit(value, event) {\n      console.log(\"your submitted values: \", value);\n    }\n    validateSurname(control) {\n      if (!control.value.match(/^123/)) {\n        return {\n          invalidSurname: true\n        };\n      }\n      return null;\n    }\n    static #_ = this.ɵfac = function ValidatorsComponent_Factory(t) {\n      return new (t || ValidatorsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ValidatorsComponent,\n      selectors: [[\"app-validators\"]],\n      decls: 18,\n      vars: 11,\n      consts: [[1, \"ui\", \"raised\", \"segment\"], [1, \"ui\", \"header\"], [1, \"ui\", \"form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"field\"], [\"for\", \"skuInput\"], [\"formControlName\", \"sku\", \"id\", \"skuInput\", \"placeholder\", \"SKU\"], [\"class\", \"ui error message\", 4, \"ngIf\"], [\"for\", \"surnameInp\"], [\"formControlName\", \"surname\", \"id\", \"surnameInp\", \"placeholder\", \"Rossi\"], [\"type\", \"submit\", 1, \"ui\", \"button\"], [1, \"ui\", \"error\", \"message\"]],\n      template: function ValidatorsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Validators\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function ValidatorsComponent_Template_form_ngSubmit_3_listener($event) {\n            return ctx.onSubmit(ctx.myForm.value, $event);\n          });\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"SKU\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, ValidatorsComponent_div_8_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 7);\n          i0.ɵɵtext(11, \"Surname\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 8);\n          i0.ɵɵtemplate(13, ValidatorsComponent_div_13_Template, 2, 0, \"div\", 6);\n          i0.ɵɵtemplate(14, ValidatorsComponent_div_14_Template, 4, 0, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(15, ValidatorsComponent_div_15_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementStart(16, \"button\", 9);\n          i0.ɵɵtext(17, \"Submit\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_4_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassProp(\"error\", !ctx.myForm.valid && ctx.myForm.touched);\n          i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵclassProp(\"error\", !((tmp_2_0 = ctx.myForm.get(\"sku\")) == null ? null : tmp_2_0.valid) && ((tmp_2_0 = ctx.myForm.get(\"sku\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", !ctx.myForm.controls[\"sku\"].valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵclassProp(\"error\", !((tmp_4_0 = ctx.myForm.get(\"surname\")) == null ? null : tmp_4_0.valid) && ((tmp_4_0 = ctx.myForm.get(\"surname\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", !ctx.myForm.controls[\"surname\"].valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.myForm.controls[\"surname\"].hasError(\"invalidSurname\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.myForm.valid);\n        }\n      },\n      dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n    });\n  }\n  return ValidatorsComponent;\n})();\nexport { ValidatorsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}