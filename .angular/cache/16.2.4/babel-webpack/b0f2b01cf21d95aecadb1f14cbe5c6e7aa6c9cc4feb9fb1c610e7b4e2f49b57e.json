{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction ReactiveFormsComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \"SKU is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReactiveFormsComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \"SKU is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass ReactiveFormsComponent {\n  // At a high level, Dependency Injection is a way to tell Angular what\n  // dependencies this component needs to function properly.\n  // During injection an instance of FormBuilder will be created\n  // we assign it to the fb variable (in the constructor). We then use the FormBuilder to create a FormGroup instance and assign it to the myform variable.\n  // The FormGroup instance is created with a single control named sku. The value of the control is set to ABC123.\n  constructor(fb) {\n    this.myForm = fb.group({\n      \"sku\": [\"\", Validators.required],\n      \"surname\": [\"\"],\n      \"test\": [\"\"]\n    });\n  }\n  onSubmit(value) {\n    console.log(\"you submitted value: \", value);\n  }\n  static #_ = this.ɵfac = function ReactiveFormsComponent_Factory(t) {\n    return new (t || ReactiveFormsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReactiveFormsComponent,\n    selectors: [[\"app-reactive-forms\"]],\n    decls: 26,\n    vars: 5,\n    consts: [[1, \"ui\", \"raised\", \"segment\"], [1, \"ui\", \"header\"], [1, \"ui\", \"form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"field\"], [\"for\", \"skuInput\"], [\"formControlName\", \"sku\", \"id\", \"skuInput\", \"placeholder\", \"SKU\"], [\"for\", \"surnameInp\"], [\"formControlName\", \"surname\", \"id\", \"surnameInp\", \"placeholder\", \"Rossi\"], [\"for\", \"test\"], [\"id\", \"test\", \"placeholder\", \"test\", 3, \"formControl\"], [\"class\", \"ui error message\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"ui\", \"button\"], [1, \"ui\", \"error\", \"message\"]],\n    template: function ReactiveFormsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Reactive Forms\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ReactiveFormsComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit(ctx.myForm.value);\n        });\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"SKU\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Surname\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 8);\n        i0.ɵɵtext(14, \"test\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"h3\");\n        i0.ɵɵtext(17, \"Validations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 3)(19, \"label\", 8);\n        i0.ɵɵtext(20, \"test\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 9);\n        i0.ɵɵtemplate(22, ReactiveFormsComponent_div_22_Template, 2, 0, \"div\", 10);\n        i0.ɵɵtemplate(23, ReactiveFormsComponent_div_23_Template, 2, 0, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 11);\n        i0.ɵɵtext(25, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"formControl\", ctx.myForm.controls[\"test\"]);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formControl\", ctx.myForm.controls[\"test\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.myForm.controls[\"sku\"].valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.controls[\"sku\"].hasError(\"required\"));\n      }\n    },\n    dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { ReactiveFormsComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ReactiveFormsComponent","constructor","fb","myForm","group","required","onSubmit","value","console","log","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","ReactiveFormsComponent_Template","rf","ctx","ɵɵlistener","ReactiveFormsComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","ReactiveFormsComponent_div_22_Template","ReactiveFormsComponent_div_23_Template","ɵɵadvance","ɵɵproperty","controls","valid","hasError"],"sources":["G:\\Software Engineer\\Portfolio\\forms\\src\\app\\shared\\reactive-forms\\reactive-forms.component.ts","G:\\Software Engineer\\Portfolio\\forms\\src\\app\\shared\\reactive-forms\\reactive-forms.component.html"],"sourcesContent":["import {Component} from \"@angular/core\";\nimport {FormBuilder, FormGroup, Validators,} from \"@angular/forms\";\n\n@Component({\n  selector: \"app-reactive-forms\",\n  templateUrl: \"./reactive-forms.component.html\",\n  styleUrls: [\"./reactive-forms.component.scss\"]\n})\nexport class ReactiveFormsComponent {\n  myForm: FormGroup;\n\n  // At a high level, Dependency Injection is a way to tell Angular what\n  // dependencies this component needs to function properly.\n\n  // During injection an instance of FormBuilder will be created\n  // we assign it to the fb variable (in the constructor). We then use the FormBuilder to create a FormGroup instance and assign it to the myform variable.\n  // The FormGroup instance is created with a single control named sku. The value of the control is set to ABC123.\n  constructor(fb: FormBuilder) {\n    this.myForm = fb.group({\n      \"sku\": [\"\", Validators.required],\n      \"surname\": [\"\"],\n      \"test\": [\"\"],\n    });\n  }\n\n  onSubmit(value: string): void {\n    console.log(\"you submitted value: \", value);\n  }\n\n}\n","<div class=\"ui raised segment\">\n  <h2 class=\"ui header\">Reactive Forms</h2>\n\n  <form [formGroup]=\"myForm\"\n        (ngSubmit)=\"onSubmit(myForm.value)\"\n        class=\"ui form\">\n    <div class=\"field\">\n      <label for=\"skuInput\">SKU</label>\n      <input formControlName=\"sku\" id=\"skuInput\" placeholder=\"SKU\">\n    </div>\n\n    <div class=\"field\">\n      <label for=\"surnameInp\">Surname</label>\n      <input formControlName=\"surname\" id=\"surnameInp\" placeholder=\"Rossi\">\n    </div>\n\n\n    <div class=\"field\">\n      <label for=\"test\">test</label>\n      <input [formControl]=\"$any (myForm).controls['test']\" id=\"test\" placeholder=\"test\">\n    </div>\n\n\n    <h3>Validations</h3>\n    <div class=\"field\">\n      <label for=\"test\">test</label>\n      <input [formControl]=\"$any (myForm).controls['test']\" id=\"test\" placeholder=\"test\">\n      <div *ngIf=\"!myForm.controls['sku'].valid\"\n           class=\"ui error message\">SKU is invalid</div>\n      <div *ngIf=\"myForm.controls['sku'].hasError('required')\"  \n           class=\"ui error message\">SKU is required</div>\n    </div>\n\n\n\n\n    <button class=\"ui button\" type=\"submit\">Submit</button>\n  </form>\n</div>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}