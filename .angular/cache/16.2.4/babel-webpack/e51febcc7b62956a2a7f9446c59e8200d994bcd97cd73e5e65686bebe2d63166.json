{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nlet ReactiveFormsComponent = class ReactiveFormsComponent {\n  // At a high level, Dependency Injection is a way to tell Angular what\n  // dependencies this component needs to function properly.\n  // During injection an instance of FormBuilder will be created\n  // we assign it to the fb variable (in the constructor). We then use the FormBuilder to create a FormGroup instance and assign it to the myform variable.\n  // The FormGroup instance is created with a single control named sku. The value of the control is set to ABC123.\n  constructor(fb) {\n    this.FormControl = FormControl;\n    this.myForm = fb.group({\n      \"sku\": [\"ABC123\"],\n      \"surname\": [\"Rossi\"]\n    });\n  }\n  onSubmit(value) {\n    console.log(\"you submitted value: \", value);\n  }\n};\nReactiveFormsComponent = __decorate([Component({\n  selector: \"app-reactive-forms\",\n  templateUrl: \"./reactive-forms.component.html\",\n  styleUrls: [\"./reactive-forms.component.scss\"]\n})], ReactiveFormsComponent);\nexport { ReactiveFormsComponent };","map":{"version":3,"names":["Component","FormControl","ReactiveFormsComponent","constructor","fb","myForm","group","onSubmit","value","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["G:\\Software Engineer\\Portfolio\\forms\\src\\app\\shared\\reactive-forms\\reactive-forms.component.ts"],"sourcesContent":["import {Component} from \"@angular/core\";\nimport {FormBuilder, FormGroup, FormControl} from \"@angular/forms\";\n\n@Component({\n  selector: \"app-reactive-forms\",\n  templateUrl: \"./reactive-forms.component.html\",\n  styleUrls: [\"./reactive-forms.component.scss\"]\n})\nexport class ReactiveFormsComponent {\n  myForm: FormGroup;\n\n\n  // At a high level, Dependency Injection is a way to tell Angular what\n  // dependencies this component needs to function properly.\n\n  // During injection an instance of FormBuilder will be created\n  // we assign it to the fb variable (in the constructor). We then use the FormBuilder to create a FormGroup instance and assign it to the myform variable.\n  // The FormGroup instance is created with a single control named sku. The value of the control is set to ABC123.\n  constructor(fb: FormBuilder) {\n    this.myForm = fb.group({\n      \"sku\": [\"ABC123\"],\n      \"surname\": [\"Rossi\"]\n    });\n  }\n\n  onSubmit(value: string): void {\n    console.log(\"you submitted value: \", value);\n  }\n\n\n  myForm2: FormGroup;\n\n\n  protected readonly FormControl = FormControl;\n}\n"],"mappings":";AAAA,SAAQA,SAAS,QAAO,eAAe;AACvC,SAAgCC,WAAW,QAAO,gBAAgB;AAOlE,IAAaC,sBAAsB,GAAnC,MAAaA,sBAAsB;EAIjC;EACA;EAEA;EACA;EACA;EACAC,YAAYC,EAAe;IAeR,KAAAH,WAAW,GAAGA,WAAW;IAd1C,IAAI,CAACI,MAAM,GAAGD,EAAE,CAACE,KAAK,CAAC;MACrB,KAAK,EAAE,CAAC,QAAQ,CAAC;MACjB,SAAS,EAAE,CAAC,OAAO;KACpB,CAAC;EACJ;EAEAC,QAAQA,CAACC,KAAa;IACpBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,KAAK,CAAC;EAC7C;CAOD;AA1BYN,sBAAsB,GAAAS,UAAA,EALlCX,SAAS,CAAC;EACTY,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWZ,sBAAsB,CA0BlC;SA1BYA,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}